<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>se.skillytaire.didactic.tools.jlc</groupId>
	<artifactId>sample</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>Samples for the 'core'-extention</name>
	<description>The core api for JLC</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.target>15</maven.compiler.target>
		<maven.compiler.source>15</maven.compiler.source>
		<root.package>${project.groupId}.${project.artifactId}</root.package>
		<junit.version>5.7.0</junit.version>
		<pitest.maven.version>1.5.2</pitest.maven.version>
		<checkstyle.config>${project.basedir}/src/maven/checkstyle.xml</checkstyle.config>
		<checkstyle.maven.version>3.1.1</checkstyle.maven.version>
		<checkstyle.version>8.38</checkstyle.version>
		<integration.sources>src/integration-test/java</integration.sources>
		<integration.resources>src/integration-test/resources</integration.resources>
		<skipTests>false</skipTests>
		<skipUnitTests>${skipTests}</skipUnitTests>
		<skipIntegrationTests>${skipTests}</skipIntegrationTests>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>bom</artifactId>
				<version>1.0-SNAPSHOT</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>

	</dependencyManagement>
	<dependencies>

			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>constructor</artifactId>
			</dependency>
	 			<!--	
			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>method</artifactId>
			</dependency>
		-->
		 
			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>lint</artifactId>
			</dependency>
			<!-- -->	
			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>javabean</artifactId>
			</dependency>
				
							
			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>property</artifactId>
			</dependency>	
		
			<dependency>
				<groupId>se.skillytaire.didactic.tools.jlc</groupId>
				<artifactId>factory.java.lang</artifactId>
			</dependency>			
			 

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle.maven.version}</version>
					<configuration>
						<configLocation>${checkstyle.config}</configLocation>
						<excludes>**/module-info.java</excludes>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest.maven.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.pitest</groupId>
							<artifactId>pitest-junit5-plugin</artifactId>
							<version>0.12</version>
						</dependency>
					</dependencies>
					<configuration>
						<excludedMethod>**.#hashCode</excludedMethod>
						<targetTests>
							<param>${root.package}*</param>
						</targetTests>

					</configuration>
				</plugin>
				<plugin>
					<!-- Findbugs replacement -->
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>4.1.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.14.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.9.1</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.0.3</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>

				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>UTF-8</encoding>
					<compilerArgs>
						<arg>--enable-preview</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>

				<configuration>
					<includeTests>true</includeTests>
					<minimumTokens>10</minimumTokens>
					<linkXref>true</linkXref>
					<targetJdk>${maven.compiler.target}</targetJdk>
					<failOnViolation>false</failOnViolation>
				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> 
				</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>


				<configuration>
					<skipTests>${skipUnitTests}</skipTests>

					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*TestCase.java</include>
						<include>**/*TestSuite.java</include>
						<include>**/AllTests.java</include>
					</includes>
					<argLine>${surefireArgLine} --enable-preview --add-exports
						org.junit.platform.commons/org.junit.platform.commons.util=ALL-UNNAMED
						--add-exports
						org.junit.platform.commons/org.junit.platform.commons.logging=ALL-UNNAMED
					</argLine>


				</configuration>




			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>

				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<doclint>none</doclint>

					<show>package</show>
					<release>${maven.compiler.target}</release>
					<source>${maven.compiler.source}</source>
					<additionalOptions>--enable-preview</additionalOptions>
					<linksource>true</linksource>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>

				<configuration>
					<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<skipTests>${skipIntegrationTests}</skipTests>
					<includes>
						<include>**/*IntegrationTests.java</include>
						<include>**/IT*.java</include>
						<include>**/*IT.java</include>
						<include>**/*ITCase.java</include>
					</includes>
					<argLine>${surefireArgLine} --enable-preview</argLine>
					<testSourceDirectory>${integration.sources}</testSourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<!-- <configuration> <testSourceDirectory>${integration.sources}</testSourceDirectory> 
							</configuration> -->
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>

				<executions>
					<execution>
						<id>add-integration-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${integration.sources}</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${integration.resources}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<!-- Findbugs replacement -->
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>

			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>

				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>

							<!-- Sets the VM argument line used when unit tests are run. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>

						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report-integration</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
							<goal>report-integration</goal>
						</goals>
					</execution>

					<execution>
						<id>default-check</id>

						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.0</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.jacoco</groupId> <artifactId>jacoco-maven-plugin</artifactId> 
				<version>0.8.6</version> <configuration> <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile> 
				</configuration> <executions> <execution> <id>default-prepare-agent</id> 
				<goals> <goal>prepare-agent</goal> </goals> </execution> <execution> <id>default-report</id> 
				<phase>prepare-package</phase> <goals> <goal>report</goal> </goals> </execution> 
				</executions> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>

				<configuration>
					<configLocation>${checkstyle.config}</configLocation>
					<excludes>**/module-info.java</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>

			</plugin>




		</plugins>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.8</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<version>3.0.0-M1</version>
						<configuration>
							<autoVersionSubmodules>true</autoVersionSubmodules>
							<useReleaseProfile>false</useReleaseProfile>
							<releaseProfiles>release</releaseProfiles>
							<goals>deploy</goals>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.14.0</version>
				<configuration>
					<linkXref>true</linkXref>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<doclint>none</doclint>
					<show>package</show>
					<release>${maven.compiler.target}</release>
					<source>${maven.compiler.source}</source>
					<additionalOptions>--enable-preview</additionalOptions>
					<linksource>true</linksource>
					<failOnError>false</failOnError>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<!-- javadoc-no-fork in order to prevent JavaDoc process from runing 
								generate-source again but this also requries that JavaDoc generation runs 
								after compile: "mvn install site" but not on a black project "mvn clean site" -->
							<report>javadoc-no-fork</report>
							<report>test-javadoc-no-fork</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<!-- Findbugs replacement -->
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.1.4</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>

				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.maven.version}</version>

			</plugin>
			<!-- <plugin> <groupId>org.pitest</groupId> <artifactId>pitest-maven</artifactId> 
				<version>${pitest.maven.version}</version> <reportSets> <reportSet> <reports> 
				<report>report</report> </reports> </reportSet> </reportSets> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.0.3</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>

	</reporting>

	<!-- mvn integration-test runs unit and integration tests. mvn failsafe:integration-test 
		runs integration tests only (does not work, integration-test dir is the problem!) 
		mvn clean test execute only Unit Tests mvn clean verify run the tests (both 
		unit and integration) mvn clean install -DskipUnitTests skip unit tests mvn 
		clean install -DskipIntegrationTests skip integration tests mvn clean install 
		-DskipTests skips all tests -->

</project>